{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/blaq/development/code/phase2/phase-2-hooks-code-challenge-bank-of-flatiron-muniu-dev/src/components/AddTransactionForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\n\nfunction AddTransactionForm() {\n  _s();\n\n  const [transactionDate, setTransactionDate] = useState(\"\");\n  const [transactionDescription, setTransactionDescription] = useState(\"\");\n  const [transactionCategory, setTransactionCategory] = useState(\"\");\n  const [transactionAmount, setTransactionAmount] = useState(\"\");\n\n  function handleFormSubmit(event) {\n    fetch(\"http://localhost:8001/transactions\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        date: transactionDate,\n        description: transactionDescription,\n        category: transactionCategory,\n        amount: transactionAmount\n      })\n    });\n    alert(\"Transaction added successfully\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ui segment\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleFormSubmit,\n      className: \"ui form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inline fields\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: transactionDate,\n          onChange: event => setTransactionDate(event.target.value),\n          type: \"date\",\n          name: \"date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: transactionDescription,\n          onChange: event => setTransactionDescription(event.target.value),\n          type: \"text\",\n          name: \"description\",\n          placeholder: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: transactionCategory,\n          onChange: event => setTransactionCategory(event.target.value),\n          type: \"text\",\n          name: \"category\",\n          placeholder: \"Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: transactionAmount,\n          onChange: event => setTransactionAmount(event.target.value),\n          type: \"number\",\n          name: \"amount\",\n          placeholder: \"Amount\",\n          step: \"0.01\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ui button\",\n        type: \"submit\",\n        children: \"Add Transaction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddTransactionForm, \"XiKaxH/BEWVtLCGiegPC/YY0UJM=\");\n\n_c = AddTransactionForm;\nexport default AddTransactionForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTransactionForm\");","map":{"version":3,"sources":["/home/blaq/development/code/phase2/phase-2-hooks-code-challenge-bank-of-flatiron-muniu-dev/src/components/AddTransactionForm.js"],"names":["React","useState","AddTransactionForm","transactionDate","setTransactionDate","transactionDescription","setTransactionDescription","transactionCategory","setTransactionCategory","transactionAmount","setTransactionAmount","handleFormSubmit","event","fetch","method","headers","body","JSON","stringify","date","description","category","amount","alert","target","value"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,SAASC,kBAAT,GAA8B;AAAA;;AAC5B,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCH,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACI,sBAAD,EAAyBC,yBAAzB,IAAsDL,QAAQ,CAAC,EAAD,CAApE;AACA,QAAM,CAACM,mBAAD,EAAsBC,sBAAtB,IAAgDP,QAAQ,CAAC,EAAD,CAA9D;AACA,QAAM,CAACQ,iBAAD,EAAoBC,oBAApB,IAA4CT,QAAQ,CAAC,EAAD,CAA1D;;AACA,WAASU,gBAAT,CAA0BC,KAA1B,EAAiC;AAC/BC,IAAAA,KAAK,CAAC,oCAAD,EAAuC;AAC1CC,MAAAA,MAAM,EAAE,MADkC;AAE1CC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFiC;AAK1CC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,QAAAA,IAAI,EAAEhB,eADa;AAEnBiB,QAAAA,WAAW,EAAEf,sBAFM;AAGnBgB,QAAAA,QAAQ,EAAEd,mBAHS;AAInBe,QAAAA,MAAM,EAAEb;AAJW,OAAf;AALoC,KAAvC,CAAL;AAYCc,IAAAA,KAAK,CAAC,gCAAD,CAAL;AACF;;AACD,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,2BACE;AAAM,MAAA,QAAQ,EAAEZ,gBAAhB;AAAkC,MAAA,SAAS,EAAC,SAA5C;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCACE;AAAO,UAAA,KAAK,EAAER,eAAd;AAA+B,UAAA,QAAQ,EAAGS,KAAD,IAAWR,kBAAkB,CAACQ,KAAK,CAACY,MAAN,CAAaC,KAAd,CAAtE;AAA4F,UAAA,IAAI,EAAC,MAAjG;AAAwG,UAAA,IAAI,EAAC;AAA7G;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,KAAK,EAAEpB,sBAAd;AAAsC,UAAA,QAAQ,EAAGO,KAAD,IAAWN,yBAAyB,CAACM,KAAK,CAACY,MAAN,CAAaC,KAAd,CAApF;AAA0G,UAAA,IAAI,EAAC,MAA/G;AAAsH,UAAA,IAAI,EAAC,aAA3H;AAAyI,UAAA,WAAW,EAAC;AAArJ;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAO,UAAA,KAAK,EAAElB,mBAAd;AAAmC,UAAA,QAAQ,EAAGK,KAAD,IAAWJ,sBAAsB,CAACI,KAAK,CAACY,MAAN,CAAaC,KAAd,CAA9E;AAAoG,UAAA,IAAI,EAAC,MAAzG;AAAgH,UAAA,IAAI,EAAC,UAArH;AAAgI,UAAA,WAAW,EAAC;AAA5I;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAO,UAAA,KAAK,EAAEhB,iBAAd;AAAiC,UAAA,QAAQ,EAAGG,KAAD,IAAWF,oBAAoB,CAACE,KAAK,CAACY,MAAN,CAAaC,KAAd,CAA1E;AAAgG,UAAA,IAAI,EAAC,QAArG;AAA8G,UAAA,IAAI,EAAC,QAAnH;AAA4H,UAAA,WAAW,EAAC,QAAxI;AAAiJ,UAAA,IAAI,EAAC;AAAtJ;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAQ,QAAA,SAAS,EAAC,WAAlB;AAA8B,QAAA,IAAI,EAAC,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GAnCQvB,kB;;KAAAA,kB;AAqCT,eAAeA,kBAAf","sourcesContent":["import React, { useState } from \"react\";\n\nfunction AddTransactionForm() {\n  const [transactionDate, setTransactionDate] = useState(\"\")\n  const [transactionDescription, setTransactionDescription] = useState(\"\")\n  const [transactionCategory, setTransactionCategory] = useState(\"\")\n  const [transactionAmount, setTransactionAmount] = useState(\"\")\n  function handleFormSubmit(event) {\n    fetch(\"http://localhost:8001/transactions\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        date: transactionDate,\n        description: transactionDescription,\n        category: transactionCategory,\n        amount: transactionAmount,\n      }),\n    });\n     alert(\"Transaction added successfully\")\n  }\n  return (\n    <div className=\"ui segment\">\n      <form onSubmit={handleFormSubmit} className=\"ui form\">\n        <div className=\"inline fields\">\n          <input value={transactionDate} onChange={(event) => setTransactionDate(event.target.value)} type=\"date\" name=\"date\" />\n          <input value={transactionDescription} onChange={(event) => setTransactionDescription(event.target.value)} type=\"text\" name=\"description\" placeholder=\"Description\" />\n          <input value={transactionCategory} onChange={(event) => setTransactionCategory(event.target.value)} type=\"text\" name=\"category\" placeholder=\"Category\" />\n          <input value={transactionAmount} onChange={(event) => setTransactionAmount(event.target.value)} type=\"number\" name=\"amount\" placeholder=\"Amount\" step=\"0.01\" />\n        </div>\n        <button className=\"ui button\" type=\"submit\">\n          Add Transaction\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default AddTransactionForm;\n"]},"metadata":{},"sourceType":"module"}